<class 'transformers.models.opt.modeling_opt.OPTForCausalLM'>

OPTForCausalLM(
  (model): OPTModel(
    (decoder): OPTDecoder(
      (embed_tokens): Embedding(50272, 5120, padding_idx=1)
      (embed_positions): OPTLearnedPositionalEmbedding(2050, 5120)
      (final_layer_norm): LayerNorm((5120,), eps=1e-05, elementwise_affine=True)
      (layers): ModuleList(
        (0-39): 40 x OPTDecoderLayer(
          (self_attn): OPTAttention(
            (k_proj): quantLinear(in_features=5120, out_features=5120, bias=True, quant_en=False, clamp_quant=False)
            (v_proj): quantLinear(in_features=5120, out_features=5120, bias=True, quant_en=False, clamp_quant=False)
            (q_proj): quantLinear(in_features=5120, out_features=5120, bias=True, quant_en=False, clamp_quant=False)
            (out_proj): quantLinear(in_features=5120, out_features=5120, bias=True, quant_en=False, clamp_quant=False)
          )
          (activation_fn): ReLU()
          (self_attn_layer_norm): LayerNorm((5120,), eps=1e-05, elementwise_affine=True)
          (fc1): quantLinear(in_features=5120, out_features=20480, bias=True, quant_en=False, clamp_quant=False)
          (fc2): quantLinear(in_features=20480, out_features=5120, bias=True, quant_en=False, clamp_quant=False)
          (final_layer_norm): LayerNorm((5120,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
  )
  (lm_head): Linear(in_features=5120, out_features=50272, bias=False)
)