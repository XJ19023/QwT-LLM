<class 'transformers.models.qwen3.modeling_qwen3.Qwen3ForCausalLM'>

Qwen3ForCausalLM(
  (model): Qwen3Model(
    (embed_tokens): Embedding(151936, 2048)
    (layers): ModuleList(
      (0-27): 28 x Qwen3DecoderLayer(
        (self_attn): Qwen3Attention(
          (q_proj): quantLinear(in_features=2048, out_features=2048, bias=False, quant_en=True, clamp_quant=False)
          (k_proj): quantLinear(in_features=2048, out_features=1024, bias=False, quant_en=True, clamp_quant=False)
          (v_proj): quantLinear(in_features=2048, out_features=1024, bias=False, quant_en=True, clamp_quant=False)
          (o_proj): quantLinear(in_features=2048, out_features=2048, bias=False, quant_en=True, clamp_quant=False)
          (q_norm): Qwen3RMSNorm((128,), eps=1e-06)
          (k_norm): Qwen3RMSNorm((128,), eps=1e-06)
        )
        (mlp): Qwen3MLP(
          (gate_proj): quantLinear(in_features=2048, out_features=6144, bias=False, quant_en=True, clamp_quant=False)
          (up_proj): quantLinear(in_features=2048, out_features=6144, bias=False, quant_en=True, clamp_quant=False)
          (down_proj): quantLinear(in_features=6144, out_features=2048, bias=False, quant_en=True, clamp_quant=False)
          (act_fn): SiLU()
        )
        (input_layernorm): Qwen3RMSNorm((2048,), eps=1e-06)
        (post_attention_layernorm): Qwen3RMSNorm((2048,), eps=1e-06)
      )
    )
    (norm): Qwen3RMSNorm((2048,), eps=1e-06)
    (rotary_emb): Qwen3RotaryEmbedding()
  )
  (lm_head): Linear(in_features=2048, out_features=151936, bias=False)
)